# Creates a new instance and attaches to a network and passes metadata to
# the instance
- name: Creating VM Instances with Shade
  os_server:
    state: present
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ login_username }}"
      password: "{{ login_password }}"
      project_name: "{{ login_project_name }}"
      domain_name: "default"
    name: "{{ inventory_hostname }}"
    key_name: "{{ keypair_name }}"
    security_groups: "{{ security_groups }}"
    auto_ip: no 
    image: "{{ image_id }}"
    flavor: "{{ flavor_id }}"
    meta:
      hostname: "{{ inventory_hostname }}"
      group: ansible
    timeout: 30
  delegate_to: localhost
  register: creation_data

#- debug: msg="{{creation_data}}"

- name: Assign IP address to cluster VM
  os_floating_ip:
    state: present
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ login_username }}"
      password: "{{ login_password }}"
      tenant_name: "{{ login_project_name }}"
      domain_name: "default"
    network: "{{ ip_pool }}"
    server: "{{ inventory_hostname }}"
    floating_ip_address: "{{ host_ip }}"
    reuse: yes
    wait: yes
  delegate_to: localhost
  register: ip_data
  when: creation_data.changed

- name: Pause to allow ssh server time to start
  shell: sleep 45 
  delegate_to: localhost
  when: creation_data.changed

#- debug: msg="{{ip_data}}"

- name: Update local host with ip address of new openstack instance
  shell: 'echo "{{ ip_data.floating_ip.floating_ip_address }} \t {{ inventory_hostname }}" >> /etc/hosts' 
  delegate_to: localhost
  when: ip_data.changed

- name: Copy over the ssh keys for everyone whose allowed to connect to this server 
  copy:
    src: ~/secrets/ssh/authorized_keys 
    dest: ~/ubuntu/.ssh/authorized_keys 
    force: yes
    mode: "u=rw,g=,o="
    owner: ubuntu
  when: creation_data.changed
